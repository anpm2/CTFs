class S:
    def __init__(self, ms=0xFFFFFFFF):
        self.s = list()
        self.ms = ms
        self.size = len(self.s)
    def sh(self, ue):
        if self.size < self.ms:
            self.s.append(ue)
            self.ud()
    def p(self):
        if self.size > 0:
            self.s.pop()
            self.ud()
    def ud(self):
        self.size = len(self.s)
FM = {
    "zero": 0b1
}
class R:
    def __init__(self):
        self._1 = 0
        self._2 = 0
        self._3 = 0
        self._4 = 0
        self.r = (
            self._1,
            self._2,
            self._3,
            self._4,)
        self.fs = 0
    def gt(self, ix):
        if ix == 0:
            ue = self._1
        elif ix == 1:
            ue = self._2
        elif ix == 2:
            ue = self._3
        elif ix == 3:
            ue = self._4
        return ue
    def st(self, ix, ue):
        if ix == 0:
            self._1 = ue
        elif ix == 1:
            self._2 = ue
        elif ix == 2:
            self._3 = ue
        elif ix == 3:
            self._4 = ue
        self.r = (
            self._1,
            self._2,
            self._3,
            self._4)
    def sfz(self, ue):
        if ue == True:
            self.fs |= FM["zero"]
        else:
            self.fs |= FM["zero"]
            self.fs ^= FM["zero"]
def m(v, o):
    tg = o >> (v.sz - 2) * 4 & 0xf
    if tg < 0 or tg >= len(v.r.r):
        exit(0)
    ir = o >> (v.sz - 3) * 4 & 0xf
    if ir == 0:
        ue = o & (16 ** (v.sz - 3) - 1)
    elif ir == 1:
        ix = o >> (v.sz - 4) * 4 & 0xf
        if ix < 0 or ix >= len(v.r.r):
            exit(0)
        ue = v.r.gt(ix)
    elif ir != 0 or ir != 1:
        exit(0)
    v.r.st(tg, ue)
def sh(v, o):
    if v.s.size >= v.s.ms:
        exit(0)
    ir = o >> (v.sz - 2) * 4 & 0xf
    if ir == 0:
        ue = o & (16 ** (v.sz - 2) - 1)
    elif ir == 1:
        tg = o >> (v.sz - 3) * 4 & 0xf
        ue = v.r.gt(tg)
    else:
        exit(0)
    v.s.sh(ue)
def p(v, o):
    if v.s.size < 1:
        exit(0)
    tg = o >> (v.sz - 2) * 4 & 0xf
    if tg < 0 or tg >= len(v.r.r):
        exit(0)
    ue = v.s.s[-1]
    v.r.st(tg, ue)
    v.s.p()
def a(v, o):
    tg = o >> (v.sz - 2) * 4 & 0xf
    if tg < 0 or tg >= len(v.r.r):
        exit(0)
    ir = o >> (v.sz - 3) * 4 & 0xf
    if ir == 0:
        ue = o & (16 ** (v.sz - 3) - 1)
    elif ir == 1:
        ix = o >> (v.sz - 4) * 4 & 0xf
        if ix < 0 or ix >= len(v.r.r):
            exit(0)
        ue = v.r.gt(ix)

    elif ir != 0 or ir != 1:
        exit(0)
    tt = v.r.gt(tg) + ue
    v.r.st(tg, tt)
def b(v, o):
    tg = o >> (v.sz - 2) * 4 & 0xf
    if tg < 0 or tg >= len(v.r.r):
        exit(0)
    ir = o >> (v.sz - 3) * 4 & 0xf
    if ir == 0:
        ue = o & (16 ** (v.sz - 3) - 1)
    elif ir == 1:
        ix = o >> (v.sz - 4) * 4 & 0xf
        if ix < 0 or ix >= len(v.r.r):
            exit(0)
        ue = v.r.gt(ix)

    elif ir != 0 or ir != 1:
        exit(0)
    tt = v.r.gt(tg) - ue
    v.r.st(tg, tt)
def z(v, o):
    tg = o >> (v.sz - 2) * 4 & 0xf
    if tg < 0 or tg >= len(v.r.r):
        exit(0)
    ir = o >> (v.sz - 3) * 4 & 0xf
    if ir == 0:
        ue = o & (16 ** (v.sz - 3) - 1)
    elif ir == 1:
        ix = o >> (v.sz - 4) * 4 & 0xf
        if ix < 0 or ix >= len(v.r.r):
            exit(0)
        ue = v.r.gt(ix)
    elif ir != 0 or ir != 1:
        exit(0)
    tt = v.r.gt(tg) ^ ue
    v.r.st(tg, tt)
def c(v, o):
    tg = o >> (v.sz - 2) * 4 & 0xf
    if tg < 0 or tg >= len(v.r.r):
        exit(0)
    ir = o >> (v.sz - 3) * 4 & 0xf
    if ir == 0:
        ue = o & (16 ** (v.sz - 3) - 1)
    elif ir == 1:
        ix = o >> (v.sz - 4) * 4 & 0xf
        if ix < 0 or ix >= len(v.r.r):
            exit(0)
        ue = v.r.gt(ix)
    elif ir != 0 or ir != 1:
        exit(0)
    if v.r.gt(tg) == ue:
        v.r.sfz(True)
    else:
        v.r.sfz(False)
def _exit():
    exit(0)
ino = (
        m,
        sh,
        p,
        a,
        b,
        c,
        z,
        _exit)
class V:
    def __init__(self):
        self.s = S()
        self.r = R()
        self.sz = 8
    def x(self, cd):
        if len(cd) != 51:
            print("Wrong!")
            exit(0)
        hv = [hex(ord(i))[2:].zfill(5) for i in cd]
        cd = f"60100000000{hv[0]}6000001130000539600000164000000C600000005000057961110000010{hv[1]}6100001131000539610000164100000C610000015100059062120000020{hv[2]}6200001132000539620000164200000C620000025200056363130000030{hv[3]}6300001133000539630000164300000C630000035300059260100000000{hv[4]}6000001130000539600000164000000C60000004500005ad61110000010{hv[5]}6100001131000539610000164100000C610000055100055962120000020{hv[6]}6200001132000539620000164200000C620000065200059e63130000030{hv[7]}6300001133000539630000164300000C630000075300054660100000000{hv[8]}6000001130000539600000164000000C600000085000057661110000010{hv[9]}6100001131000539610000164100000C610000095100054862120000020{hv[10]}6200001132000539620000164200000C6200000a5200058f63130000030{hv[11]}6300001133000539630000164300000C6300000b5300054860100000000{hv[12]}6000001130000539600000164000000C6000000c5000058d61110000010{hv[13]}6100001131000539610000164100000C6100000d5100058862120000020{hv[14]}6200001132000539620000164200000C6200000e5200053263130000030{hv[15]}6300001133000539630000164300000C6300000f5300058a60100000000{hv[16]}6000001130000539600000164000000C600000105000057061110000010{hv[17]}6100001131000539610000164100000C61000011510005ba62120000020{hv[18]}6200001132000539620000164200000C620000125200056e63130000030{hv[19]}6300001133000539630000164300000C630000135300058b60100000000{hv[20]}6000001130000539600000164000000C600000145000055461110000010{hv[21]}6100001131000539610000164100000C61000015510005b762120000020{hv[22]}6200001132000539620000164200000C620000165200059363130000030{hv[23]}6300001133000539630000164300000C630000175300057660100000000{hv[24]}6000001130000539600000164000000C600000185000058c61110000010{hv[25]}6100001131000539610000164100000C610000195100055a62120000020{hv[26]}6200001132000539620000164200000C6200001a5200056663130000030{hv[27]}6300001133000539630000164300000C6300001b5300058360100000000{hv[28]}6000001130000539600000164000000C6000001c5000055d61110000010{hv[29]}6100001131000539610000164100000C6100001d5100056362120000020{hv[30]}6200001132000539620000164200000C6200001e5200052163130000030{hv[31]}6300001133000539630000164300000C6300001f5300059a60100000000{hv[32]}6000001130000539600000164000000C600000205000056361110000010{hv[33]}6100001131000539610000164100000C610000215100058362120000020{hv[34]}6200001132000539620000164200000C62000022520005a763130000030{hv[35]}6300001133000539630000164300000C630000235300051f60100000000{hv[36]}6000001130000539600000164000000C60000024500005a161110000010{hv[37]}6100001131000539610000164100000C61000025510005af62120000020{hv[38]}6200001132000539620000164200000C62000026520005bd63130000030{hv[39]}6300001133000539630000164300000C630000275300055960100000000{hv[40]}6000001130000539600000164000000C600000285000057461110000010{hv[41]}6100001131000539610000164100000C610000295100055662120000020{hv[42]}6200001132000539620000164200000C6200002a5200051663130000030{hv[43]}6300001133000539630000164300000C6300002b530005bf60100000000{hv[44]}6000001130000539600000164000000C6000002c500005a961110000010{hv[45]}6100001131000539610000164100000C6100002d5100057062120000020{hv[46]}6200001132000539620000164200000C6200002e5200056e63130000030{hv[47]}6300001133000539630000164300000C6300002f5300055160100000000{hv[48]}6000001130000539600000164000000C60000030500005a461110000010{hv[49]}6100001131000539610000164100000C61000031510005bd62120000020{hv[50]}6200001132000539620000164200000C6200003252000595"
        os = []
        ct = 0
        for i in range(0, len(cd), 8):
            os.append("0x" + cd[i:i+8])
        for i in range(len(os)):
            o = int(os[i], 16)
            if o > 0 and o <= (16 ** self.sz - 1):
                op = o >> (self.sz - 1) * 4
                ino[op](self, o)
            else:
                exit(1)
            ct += v.r.fs
        if ct == 0x191:
            print("Correct!")
        else:
            print("Wrong!")

ip = input("Enter Flag: ")
v = V()
v.x(ip)